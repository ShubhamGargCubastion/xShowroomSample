// Package generated_models contains the types for schema 'x_showroom'.
package generated_models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql"
	"errors"

	"github.com/go-sql-driver/mysql"
)

// XDemoGroupDtlItem represents a row from 'x_showroom.x_demo_group_dtl_item'.
type XDemoGroupDtlItem struct {
	ID                uint           `json:"id"`                   // id
	Name              sql.NullString `json:"name"`                 // name
	TypeCd            string         `json:"type_cd"`              // type_cd
	Width             sql.NullString `json:"width"`                // width
	Height            sql.NullString `json:"height"`               // height
	XCoordinate       sql.NullString `json:"x_coordinate"`         // x_coordinate
	YCoordinate       sql.NullString `json:"y_coordinate"`         // y_coordinate
	Alpha             float64        `json:"alpha"`                // alpha
	AttID             sql.NullInt64  `json:"att_id"`               // att_id
	DemoGroupDtlID    sql.NullInt64  `json:"demo_group_dtl_id"`    // demo_group_dtl_id
	DescText          sql.NullString `json:"desc_text"`            // desc_text
	DescTextFontName  sql.NullString `json:"desc_text_font_name"`  // desc_text_font_name
	DescTextFontStyle sql.NullString `json:"desc_text_font_style"` // desc_text_font_style
	DescTextFontSize  sql.NullString `json:"desc_text_font_size"`  // desc_text_font_size
	DescTextFontColor sql.NullString `json:"desc_text_font_color"` // desc_text_font_color
	CreatedBy         uint           `json:"created_by"`           // created_by
	UpdatedBy         uint           `json:"updated_by"`           // updated_by
	CreatedAt         mysql.NullTime `json:"created_at"`           // created_at
	UpdatedAt         mysql.NullTime `json:"updated_at"`           // updated_at
	SeqNum            uint           `json:"seq_num"`              // seq_num
	ThumbnailAttID    sql.NullInt64  `json:"thumbnail_att_id"`     // thumbnail_att_id

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the XDemoGroupDtlItem exists in the database.
func (xdgdi *XDemoGroupDtlItem) Exists() bool {
	return xdgdi._exists
}

// Deleted provides information if the XDemoGroupDtlItem has been deleted from the database.
func (xdgdi *XDemoGroupDtlItem) Deleted() bool {
	return xdgdi._deleted
}

// Insert inserts the XDemoGroupDtlItem to the database.
func (xdgdi *XDemoGroupDtlItem) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if xdgdi._exists {
		return errors.New("insert failed: already exists")
	}

	// sql insert query, primary key provided by autoincrement
	const sqlstr = `INSERT INTO x_showroom.x_demo_group_dtl_item (` +
		`name, type_cd, width, height, x_coordinate, y_coordinate, alpha, att_id, demo_group_dtl_id, desc_text, desc_text_font_name, desc_text_font_style, desc_text_font_size, desc_text_font_color, created_by, updated_by, created_at, updated_at, seq_num, thumbnail_att_id` +
		`) VALUES (` +
		`?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?` +
		`)`

	// run query
	XOLog(sqlstr, xdgdi.Name, xdgdi.TypeCd, xdgdi.Width, xdgdi.Height, xdgdi.XCoordinate, xdgdi.YCoordinate, xdgdi.Alpha, xdgdi.AttID, xdgdi.DemoGroupDtlID, xdgdi.DescText, xdgdi.DescTextFontName, xdgdi.DescTextFontStyle, xdgdi.DescTextFontSize, xdgdi.DescTextFontColor, xdgdi.CreatedBy, xdgdi.UpdatedBy, xdgdi.CreatedAt, xdgdi.UpdatedAt, xdgdi.SeqNum, xdgdi.ThumbnailAttID)
	res, err := db.Exec(sqlstr, xdgdi.Name, xdgdi.TypeCd, xdgdi.Width, xdgdi.Height, xdgdi.XCoordinate, xdgdi.YCoordinate, xdgdi.Alpha, xdgdi.AttID, xdgdi.DemoGroupDtlID, xdgdi.DescText, xdgdi.DescTextFontName, xdgdi.DescTextFontStyle, xdgdi.DescTextFontSize, xdgdi.DescTextFontColor, xdgdi.CreatedBy, xdgdi.UpdatedBy, xdgdi.CreatedAt, xdgdi.UpdatedAt, xdgdi.SeqNum, xdgdi.ThumbnailAttID)
	if err != nil {
		return err
	}

	// retrieve id
	id, err := res.LastInsertId()
	if err != nil {
		return err
	}

	// set primary key and existence
	xdgdi.ID = uint(id)
	xdgdi._exists = true

	return nil
}

// Update updates the XDemoGroupDtlItem in the database.
func (xdgdi *XDemoGroupDtlItem) Update(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !xdgdi._exists {
		return errors.New("update failed: does not exist")
	}

	// if deleted, bail
	if xdgdi._deleted {
		return errors.New("update failed: marked for deletion")
	}

	// sql query
	const sqlstr = `UPDATE x_showroom.x_demo_group_dtl_item SET ` +
		`name = ?, type_cd = ?, width = ?, height = ?, x_coordinate = ?, y_coordinate = ?, alpha = ?, att_id = ?, demo_group_dtl_id = ?, desc_text = ?, desc_text_font_name = ?, desc_text_font_style = ?, desc_text_font_size = ?, desc_text_font_color = ?, created_by = ?, updated_by = ?, created_at = ?, updated_at = ?, seq_num = ?, thumbnail_att_id = ?` +
		` WHERE id = ?`

	// run query
	XOLog(sqlstr, xdgdi.Name, xdgdi.TypeCd, xdgdi.Width, xdgdi.Height, xdgdi.XCoordinate, xdgdi.YCoordinate, xdgdi.Alpha, xdgdi.AttID, xdgdi.DemoGroupDtlID, xdgdi.DescText, xdgdi.DescTextFontName, xdgdi.DescTextFontStyle, xdgdi.DescTextFontSize, xdgdi.DescTextFontColor, xdgdi.CreatedBy, xdgdi.UpdatedBy, xdgdi.CreatedAt, xdgdi.UpdatedAt, xdgdi.SeqNum, xdgdi.ThumbnailAttID, xdgdi.ID)
	_, err = db.Exec(sqlstr, xdgdi.Name, xdgdi.TypeCd, xdgdi.Width, xdgdi.Height, xdgdi.XCoordinate, xdgdi.YCoordinate, xdgdi.Alpha, xdgdi.AttID, xdgdi.DemoGroupDtlID, xdgdi.DescText, xdgdi.DescTextFontName, xdgdi.DescTextFontStyle, xdgdi.DescTextFontSize, xdgdi.DescTextFontColor, xdgdi.CreatedBy, xdgdi.UpdatedBy, xdgdi.CreatedAt, xdgdi.UpdatedAt, xdgdi.SeqNum, xdgdi.ThumbnailAttID, xdgdi.ID)
	return err
}

// Save saves the XDemoGroupDtlItem to the database.
func (xdgdi *XDemoGroupDtlItem) Save(db XODB) error {
	if xdgdi.Exists() {
		return xdgdi.Update(db)
	}

	return xdgdi.Insert(db)
}

// Delete deletes the XDemoGroupDtlItem from the database.
func (xdgdi *XDemoGroupDtlItem) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !xdgdi._exists {
		return nil
	}

	// if deleted, bail
	if xdgdi._deleted {
		return nil
	}

	// sql query
	const sqlstr = `DELETE FROM x_showroom.x_demo_group_dtl_item WHERE id = ?`

	// run query
	XOLog(sqlstr, xdgdi.ID)
	_, err = db.Exec(sqlstr, xdgdi.ID)
	if err != nil {
		return err
	}

	// set deleted
	xdgdi._deleted = true

	return nil
}

// XDemoGroupDtlItemsByCreatedBy retrieves a row from 'x_showroom.x_demo_group_dtl_item' as a XDemoGroupDtlItem.
//
// Generated from index 'x_demo_group_dtl_item_created_by_foreign'.
func XDemoGroupDtlItemsByCreatedBy(db XODB, createdBy uint) ([]*XDemoGroupDtlItem, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, name, type_cd, width, height, x_coordinate, y_coordinate, alpha, att_id, demo_group_dtl_id, desc_text, desc_text_font_name, desc_text_font_style, desc_text_font_size, desc_text_font_color, created_by, updated_by, created_at, updated_at, seq_num, thumbnail_att_id ` +
		`FROM x_showroom.x_demo_group_dtl_item ` +
		`WHERE created_by = ?`

	// run query
	XOLog(sqlstr, createdBy)
	q, err := db.Query(sqlstr, createdBy)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*XDemoGroupDtlItem{}
	for q.Next() {
		xdgdi := XDemoGroupDtlItem{
			_exists: true,
		}

		// scan
		err = q.Scan(&xdgdi.ID, &xdgdi.Name, &xdgdi.TypeCd, &xdgdi.Width, &xdgdi.Height, &xdgdi.XCoordinate, &xdgdi.YCoordinate, &xdgdi.Alpha, &xdgdi.AttID, &xdgdi.DemoGroupDtlID, &xdgdi.DescText, &xdgdi.DescTextFontName, &xdgdi.DescTextFontStyle, &xdgdi.DescTextFontSize, &xdgdi.DescTextFontColor, &xdgdi.CreatedBy, &xdgdi.UpdatedBy, &xdgdi.CreatedAt, &xdgdi.UpdatedAt, &xdgdi.SeqNum, &xdgdi.ThumbnailAttID)
		if err != nil {
			return nil, err
		}

		res = append(res, &xdgdi)
	}

	return res, nil
}

// XDemoGroupDtlItemsByDemoGroupDtlID retrieves a row from 'x_showroom.x_demo_group_dtl_item' as a XDemoGroupDtlItem.
//
// Generated from index 'x_demo_group_dtl_item_demo_group_dtl_id_foreign'.
func XDemoGroupDtlItemsByDemoGroupDtlID(db XODB, demoGroupDtlID sql.NullInt64) ([]*XDemoGroupDtlItem, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, name, type_cd, width, height, x_coordinate, y_coordinate, alpha, att_id, demo_group_dtl_id, desc_text, desc_text_font_name, desc_text_font_style, desc_text_font_size, desc_text_font_color, created_by, updated_by, created_at, updated_at, seq_num, thumbnail_att_id ` +
		`FROM x_showroom.x_demo_group_dtl_item ` +
		`WHERE demo_group_dtl_id = ?`

	// run query
	XOLog(sqlstr, demoGroupDtlID)
	q, err := db.Query(sqlstr, demoGroupDtlID)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*XDemoGroupDtlItem{}
	for q.Next() {
		xdgdi := XDemoGroupDtlItem{
			_exists: true,
		}

		// scan
		err = q.Scan(&xdgdi.ID, &xdgdi.Name, &xdgdi.TypeCd, &xdgdi.Width, &xdgdi.Height, &xdgdi.XCoordinate, &xdgdi.YCoordinate, &xdgdi.Alpha, &xdgdi.AttID, &xdgdi.DemoGroupDtlID, &xdgdi.DescText, &xdgdi.DescTextFontName, &xdgdi.DescTextFontStyle, &xdgdi.DescTextFontSize, &xdgdi.DescTextFontColor, &xdgdi.CreatedBy, &xdgdi.UpdatedBy, &xdgdi.CreatedAt, &xdgdi.UpdatedAt, &xdgdi.SeqNum, &xdgdi.ThumbnailAttID)
		if err != nil {
			return nil, err
		}

		res = append(res, &xdgdi)
	}

	return res, nil
}

// XDemoGroupDtlItemByID retrieves a row from 'x_showroom.x_demo_group_dtl_item' as a XDemoGroupDtlItem.
//
// Generated from index 'x_demo_group_dtl_item_id_pkey'.
func XDemoGroupDtlItemByID(db XODB, id uint) (*XDemoGroupDtlItem, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, name, type_cd, width, height, x_coordinate, y_coordinate, alpha, att_id, demo_group_dtl_id, desc_text, desc_text_font_name, desc_text_font_style, desc_text_font_size, desc_text_font_color, created_by, updated_by, created_at, updated_at, seq_num, thumbnail_att_id ` +
		`FROM x_showroom.x_demo_group_dtl_item ` +
		`WHERE id = ?`

	// run query
	XOLog(sqlstr, id)
	xdgdi := XDemoGroupDtlItem{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, id).Scan(&xdgdi.ID, &xdgdi.Name, &xdgdi.TypeCd, &xdgdi.Width, &xdgdi.Height, &xdgdi.XCoordinate, &xdgdi.YCoordinate, &xdgdi.Alpha, &xdgdi.AttID, &xdgdi.DemoGroupDtlID, &xdgdi.DescText, &xdgdi.DescTextFontName, &xdgdi.DescTextFontStyle, &xdgdi.DescTextFontSize, &xdgdi.DescTextFontColor, &xdgdi.CreatedBy, &xdgdi.UpdatedBy, &xdgdi.CreatedAt, &xdgdi.UpdatedAt, &xdgdi.SeqNum, &xdgdi.ThumbnailAttID)
	if err != nil {
		return nil, err
	}

	return &xdgdi, nil
}

// XDemoGroupDtlItemsByUpdatedBy retrieves a row from 'x_showroom.x_demo_group_dtl_item' as a XDemoGroupDtlItem.
//
// Generated from index 'x_demo_group_dtl_item_updated_by_foreign'.
func XDemoGroupDtlItemsByUpdatedBy(db XODB, updatedBy uint) ([]*XDemoGroupDtlItem, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, name, type_cd, width, height, x_coordinate, y_coordinate, alpha, att_id, demo_group_dtl_id, desc_text, desc_text_font_name, desc_text_font_style, desc_text_font_size, desc_text_font_color, created_by, updated_by, created_at, updated_at, seq_num, thumbnail_att_id ` +
		`FROM x_showroom.x_demo_group_dtl_item ` +
		`WHERE updated_by = ?`

	// run query
	XOLog(sqlstr, updatedBy)
	q, err := db.Query(sqlstr, updatedBy)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*XDemoGroupDtlItem{}
	for q.Next() {
		xdgdi := XDemoGroupDtlItem{
			_exists: true,
		}

		// scan
		err = q.Scan(&xdgdi.ID, &xdgdi.Name, &xdgdi.TypeCd, &xdgdi.Width, &xdgdi.Height, &xdgdi.XCoordinate, &xdgdi.YCoordinate, &xdgdi.Alpha, &xdgdi.AttID, &xdgdi.DemoGroupDtlID, &xdgdi.DescText, &xdgdi.DescTextFontName, &xdgdi.DescTextFontStyle, &xdgdi.DescTextFontSize, &xdgdi.DescTextFontColor, &xdgdi.CreatedBy, &xdgdi.UpdatedBy, &xdgdi.CreatedAt, &xdgdi.UpdatedAt, &xdgdi.SeqNum, &xdgdi.ThumbnailAttID)
		if err != nil {
			return nil, err
		}

		res = append(res, &xdgdi)
	}

	return res, nil
}
